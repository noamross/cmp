% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/RcppExports.R, R/backwards_compatibility.R
\name{com_compute_z}
\alias{com.compute.log.z}
\alias{com.compute.z}
\alias{com_compute_log_z}
\alias{com_compute_z}
\title{Compute COM-Poisson Normalizing Constant}
\usage{
com_compute_z(lambda, nu, log_error = 0.001, maxit = 1000L)

com.compute.z(lambda, nu, log_error = 0.001, maxit = 1000L)

com.compute.log.z(lambda, nu, log_error = 0.001, maxit = 1000L)
}
\arguments{
\item{lambda}{Lambda value in COM-Poisson distribution}

\item{nu}{Nu value in COM-Poisson distribution}

\item{log.error}{Precision in the log of the normalizing constant}
}
\value{
The normalizing constant as a real number with specified precision.
}
\description{
Computes the normalizing constant in the COM-Poisson model for given values
of the parameters.
}
\details{
\code{com_compute_z} computes the COM-Poisson normalizing constant \deqn{
}{z = Sum (lambda^j)/(j!^nu) }\deqn{ z = \sum_{i=0}^\infty
\frac{\lambda^j}{(j!)^\nu} }{z = Sum (lambda^j)/(j!^nu) }\deqn{ }{z = Sum
(lambda^j)/(j!^nu) } to the specified precision. If no precision is
specified, then the package default is used.

\code{com_compute_log_z} is equivalent to \code{log(com_compute_z(lambda,
nu))} but provudes additional precision.
}
\examples{
data(insurance)
fit = com.fit(Lemaire)
z = com_compute_z(fit$lambda, fit$nu)
}
\author{
Jeffrey Dunn
}
\references{
Shmueli, G., Minka, T. P., Kadane, J. B., Borle, S. and
Boatwright, P., \dQuote{A useful distribution for fitting discrete data:
Revival of the Conway-Maxwell-Poisson distribution,} J. Royal Statist. Soc.,
v54, pp. 127-142, 2005.
}
\seealso{
\code{\link{com.fit}}
}
\keyword{models}

