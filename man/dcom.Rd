% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/RcppExports.R, R/backwards_compatibility.R
\name{dcom}
\alias{com.log.density}
\alias{dcom}
\alias{pcom}
\alias{qcom}
\alias{rcom}
\title{The COM-Poisson Distribution}
\usage{
dcom(x, lambda, nu, z = NA_real_, log_p = FALSE, log_error_z = 1e-06,
  maxit_z = 10000L, parallel = FALSE)

pcom(q, lambda, nu, z = NA_real_, log_p = FALSE, log_error_z = 1e-06,
  maxit_z = 10000L, parallel = FALSE)

qcom(p, lambda, nu, z = NA_real_, log_p = FALSE, log_error_z = 1e-06,
  maxit_z = 10000L, parallel = FALSE)

rcom(n, lambda, nu, z = NA_real_, log_error_z = 1e-06, maxit_z = 10000L,
  parallel = FALSE)

com.log.density(x, lambda, nu, log.z = NULL)
}
\arguments{
\item{x}{level to evaluate the PMF at}

\item{lambda}{value of lambda parameter}

\item{nu}{value of nu parameter}

\item{z}{normalizing constant, computed if not specified}

\item{n}{number of random values to return}

\item{log.z}{natural log of z}
}
\value{
\code{dcom} gives the probability that a random COM-Poisson variable
X takes value x.  \code{rcom} gives a vector of \code{n} random values
sampled from the COM-Poisson distribution.
}
\description{
Probability mass function and random generation for the COM-Poisson
distribution for given values of the parameters.
}
\details{
Computes the probability mass function of the COM-Poisson distribution
\deqn{ }{f(x) = (1/Z) (lambda^x)/(x!^nu).}\deqn{ f(x) =
\frac{1}{Z(\lambda,\nu)}\frac{\lambda^x}{(x!)^\nu}. }{f(x) = (1/Z)
(lambda^x)/(x!^nu).}\deqn{ }{f(x) = (1/Z) (lambda^x)/(x!^nu).}
}
\author{
Jeffrey Dunn
}
\references{
Shmueli, G., Minka, T. P., Kadane, J. B., Borle, S. and
Boatwright, P., \dQuote{A useful distribution for fitting discrete data:
Revival of the Conway-Maxwell-Poisson distribution,} J. Royal Statist. Soc.,
v54, pp. 127-142, 2005.
}
\seealso{
\code{\link{com.loglikelihood}}, \code{\link{com.log.density}}
}
\keyword{models}

